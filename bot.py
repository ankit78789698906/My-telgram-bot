import os
import aiohttp
import aiofiles
import subprocess
from pyrogram import Client, filters
from pyrogram.types import Message

# üëâ ‡§Ö‡§™‡§®‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡§π‡§æ‡§Å ‡§°‡§æ‡§≤‡•á‡§Ç
API_ID = 25281153
API_HASH = "9fbfd30f6baf70e38e22aecbf50ee17c"
BOT_TOKEN = "8058445658:AAG2ZZHWmIJPvHDNBByWjIAvWR4zr6Wjlg8"

bot = Client("HindiDownloaderBot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

def sanitize_filename(name):
    import re
    return re.sub(r'[<>:"/\\|?*]', '', name).strip()

async def download_video(url, name, resolution):
    filename = f"{sanitize_filename(name)}.mp4"
    cmd = f"yt-dlp -f 'b[height<={resolution}]' -o '{filename}' '{url}'"
    subprocess.run(cmd, shell=True)
    return filename if os.path.exists(filename) else None

async def download_file(url, name):
    filename = f"{sanitize_filename(name)}.pdf"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status == 200:
                f = await aiofiles.open(filename, mode='wb')
                await f.write(await resp.read())
                await f.close()
    return filename if os.path.exists(filename) else None

@bot.on_message(filters.command("start"))
async def start_handler(bot, message):
    await message.reply_text("‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§ï‡•É‡§™‡§Ø‡§æ .txt ‡§´‡§æ‡§á‡§≤ ‡§≠‡•á‡§ú‡•á‡§Ç ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§®‡§æ‡§Æ ‡§î‡§∞ ‡§≤‡§ø‡§Ç‡§ï ‡§π‡•ã‡•§")

@bot.on_message(filters.document)
async def handle_txt_file(bot, message: Message):
    if not message.document.file_name.endswith(".txt"):
        await message.reply_text("‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§ø‡§∞‡•ç‡§´ .txt ‡§´‡§æ‡§á‡§≤ ‡§≠‡•á‡§ú‡•á‡§Ç‡•§")
        return

    file_path = await message.download()
    await message.reply_text("üîÑ ‡§´‡§æ‡§á‡§≤ ‡§™‡§¢‡§º‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à...")

    await message.reply_text("üéû ‡§ï‡•É‡§™‡§Ø‡§æ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•ç‡§µ‡§æ‡§≤‡§ø‡§ü‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç (‡§â‡§¶‡§æ‡§π‡§∞‡§£: 144, 240, 360, 480, 720, 1080)")
    quality_msg = await bot.listen(message.chat.id)
    resolution = quality_msg.text.strip()

    await message.reply_text("üñã ‡§Ö‡§¨ ‡§è‡§ï ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§≠‡•á‡§ú‡•á‡§Ç ‡§ú‡•ã ‡§π‡§∞ ‡§´‡§æ‡§á‡§≤ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡§æ‡§è‡§ó‡§æ")
    caption_msg = await bot.listen(message.chat.id)
    caption = caption_msg.text.strip()

    await message.reply_text("üåÑ ‡§•‡§Ç‡§¨‡§®‡•á‡§≤ ‡§≤‡§ø‡§Ç‡§ï ‡§≠‡•á‡§ú‡•á‡§Ç ‡§Ø‡§æ 'no' ‡§≤‡§ø‡§ñ‡•á‡§Ç")
    thumb_msg = await bot.listen(message.chat.id)
    thumb_link = thumb_msg.text.strip()
    thumb_file = None

    if thumb_link.lower() != "no" and thumb_link.startswith("http"):
        thumb_file = "thumb.jpg"
        subprocess.run(f"wget '{thumb_link}' -O '{thumb_file}'", shell=True)

    async with aiofiles.open(file_path, mode='r', encoding='utf-8') as f:
        async for line in f:
            if line.strip():
                parts = line.strip().rsplit(" ", 1)
                if len(parts) == 2 and parts[1].startswith("http"):
                    name, url = parts
                    try:
                        if ".pdf" in url or ".doc" in url:
                            saved_file = await download_file(url, name)
                        else:
                            saved_file = await download_video(url, name, resolution)

                        if saved_file:
                            await bot.send_document(
                                chat_id=message.chat.id,
                                document=saved_file,
                                caption=f"{name}\n{caption}",
                                thumb=thumb_file if thumb_file else None
                            )
                            os.remove(saved_file)
                        else:
                            await message.reply_text(f"‚ùå {name} ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü")
                    except Exception as e:
                        await message.reply_text(f"‚ö†Ô∏è {name}: {e}")

    if thumb_file and os.path.exists(thumb_file):
        os.remove(thumb_file)

    await message.reply_text("‚úÖ ‡§∏‡§≠‡•Ä ‡§´‡§æ‡§á‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏ ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü‡•§")

bot.run()
